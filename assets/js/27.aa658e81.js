(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{551:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"基础运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础运算符"}},[s._v("#")]),s._v(" 基础运算符")]),s._v(" "),a("p",[a("strong",[s._v("算术运算符：")]),s._v(" "),a("code",[s._v("+")]),s._v(" 、"),a("code",[s._v("-")]),s._v("、 "),a("code",[s._v("*")]),s._v(" 、"),a("code",[s._v("/")]),s._v(" 、"),a("code",[s._v("%")]),s._v(" 表示加、减、 乘、除、求余运算。")]),s._v(" "),a("p",[s._v("关于除法：")]),s._v(" "),a("ul",[a("li",[s._v("两个操作数都是整数时，表整除。否则为浮点除法。")]),s._v(" "),a("li",[s._v("整数除以 0 产生异常")]),s._v(" "),a("li",[s._v("浮点数除以 0 得到无穷大或者 NaN。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.3333333333333335")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// java.lang.ArithmeticException: / by zero")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Infinity")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("关于浮点数运算：")]),s._v(" "),a("ul",[a("li",[s._v("在默认情况下， 虚拟机允许对中间计算结果采用扩展的精度。(不会溢出)")]),s._v(" "),a("li",[s._v("但是， 对于使用 "),a("code",[s._v("strictfp")]),s._v(" 关键字标记的方法必须使用严格的浮点计算来生成可再生的结果。（可能溢出）")])]),s._v(" "),a("p",[s._v("**赋值二元运算符：**运算符放在 = 号左边，如 "),a("code",[s._v("+=")]),s._v(" 、 "),a("code",[s._v("%=")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("x += 2;\n// 等价于\nx = x + 2;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("**自增自减运算符：**后缀形式 "),a("code",[s._v("x++")]),s._v("、"),a("code",[s._v("x--")]),s._v("；前缀形式 "),a("code",[s._v("++x")]),s._v(" 、"),a("code",[s._v("--x")]),s._v("。")]),s._v(" "),a("p",[s._v("单独使用无区别，但在表达式中， "),a("code",[s._v("++x")]),s._v(" 与 "),a("code",[s._v("x++")]),s._v(" 有区别：")]),s._v(" "),a("ul",[a("li",[s._v("前缀形式 "),a("code",[s._v("y = ++x")]),s._v("：先自增后赋值。")]),s._v(" "),a("li",[s._v("后缀形式 "),a("code",[s._v("y = ++x")]),s._v("：先赋值后自增。")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"数学函数与常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学函数与常量"}},[s._v("#")]),s._v(" 数学函数与常量")]),s._v(" "),a("p",[a("strong",[s._v("平方根：")]),s._v(" "),a("code",[s._v("y = Math.sqrt(x);")]),s._v("（ x 的平方根）。")]),s._v(" "),a("p",[a("strong",[s._v("幂运算：")]),s._v(" "),a("code",[s._v("y = Math.pow(x, n);")]),s._v(" （x 的 n 次幂，三个数都为 double 类型）。")]),s._v(" "),a("p",[a("strong",[s._v("取模运算：")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("%")]),s._v(" 为取余，"),a("strong",[s._v("取余运算在计算商值向0方向舍弃小数位")]),s._v(".")]),s._v(" "),a("li",[a("code",[s._v("floorMod()")]),s._v(" 为取模，"),a("strong",[s._v("取模运算在计算商值向负无穷方向舍弃小数位")]),s._v("（根据欧几里德规则：余数总大于 0）。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("floorMod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注意：对于负除数，"),a("code",[s._v("floorMod()")]),s._v(" 会得到负数结果，不过实际中很少出现.")]),s._v(" "),a("p",[a("strong",[s._v("三角函数：")]),s._v(" "),a("code",[s._v("Math.sin()")]),s._v("、"),a("code",[s._v("cos")]),s._v("、"),a("code",[s._v("tan")]),s._v("、"),a("code",[s._v("atan")]),s._v("、"),a("code",[s._v("atan2")]),s._v(" 等。")]),s._v(" "),a("p",[a("strong",[s._v("指数函数及其反函数：")]),a("code",[s._v("Math.exp")]),s._v(" e 的 n次方、"),a("code",[s._v("Math.log")]),s._v(" 自然对数、"),a("code",[s._v("Math.log10")]),s._v(" 以 10 为底的对数。")]),s._v(" "),a("p",[a("strong",[s._v("常量：")]),a("code",[s._v("Math.PI")]),s._v("（Π） 、"),a("code",[s._v("Math.E")]),s._v(" （e）。")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"数值类型合法转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值类型合法转化"}},[s._v("#")]),s._v(" 数值类型合法转化")]),s._v(" "),a("p",[s._v("我们经常需要将一种数值类型转换为另一种数值类型。下图给出了数值类型之间的合法转换。")]),s._v(" "),a("p",[s._v("实心箭头：表示无信息丢失的转换。")]),s._v(" "),a("p",[s._v("虚箭头： 表示可能有精度损失的转换。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/javaNum1.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"强制类型转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转化"}},[s._v("#")]),s._v(" 强制类型转化")]),s._v(" "),a("p",[s._v("数值之间不合法转化，需要进行强制转化，可能丢失一些信息。")]),s._v(" "),a("p",[s._v("例如，double 转 int：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("94.67")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" myScore "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 94")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这种方法将 "),a("code",[s._v("94.67")]),s._v(" 进行了截断。")]),s._v(" "),a("p",[s._v("要想四舍五入，使用方法："),a("code",[s._v("(int) Math.round(x);")]),s._v("。")]),s._v(" "),a("p",[s._v("注意：如果试图将一个数值从一种类型强制转换为另一种类型， 而又超出了目标类型的 表示范围，结果就会截断成一个完全不同的值。")]),s._v(" "),a("p",[s._v("赋值二元运算符，也可以发生强制转化，是合法的。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("hr"),s._v(" "),a("h3",{attrs:{id:"其他运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他运算符"}},[s._v("#")]),s._v(" 其他运算符")]),s._v(" "),a("p",[a("strong",[s._v("boolean 运算符：")]),s._v(" "),a("code",[s._v("<")]),s._v(" 小于、 "),a("code",[s._v(">")]),s._v(" 大于、"),a("code",[s._v("<=")]),s._v(" 小于等于、 "),a("code",[s._v(">=")]),s._v(" 大于等于、"),a("code",[s._v("==")]),s._v(" 等于、"),a("code",[s._v("!=")]),s._v(" 不等于。")]),s._v(" "),a("p",[a("strong",[s._v("逻辑运算符：")]),a("code",[s._v("&&")]),s._v(" 逻辑“ 与” 、"),a("code",[s._v("||")]),s._v(" 逻辑“ 或” 、"),a("code",[s._v("!")]),s._v(" 逻辑“ 非” 。")]),s._v(" "),a("p",[a("strong",[s._v("三元运算符：")]),a("code",[s._v("condition ? expression1 : expression2")]),s._v("。条件为 true 则为第一个表达式的值；否则为第二个表达式的值。")]),s._v(" "),a("p",[a("strong",[s._v("位运算符：")]),s._v(" "),a("code",[s._v("&")]),s._v(" (按位与)、 "),a("code",[s._v("|")]),s._v(" (按位或) 、"),a("code",[s._v("^")]),s._v(" (按位异或)、 "),a("code",[s._v("~")]),s._v(" (按位取反)")]),s._v(" "),a("p",[a("code",[s._v("<<")]),s._v("、"),a("code",[s._v(">>")]),s._v(" 将位模式左移或右移（右移时用符号位填充高位）。"),a("code",[s._v(">>>")]),s._v(" 用 0 填充高位，没有 "),a("code",[s._v("<<<")]),s._v("。")]),s._v(" "),a("hr")])}),[],!1,null,null,null);t.default=e.exports}}]);