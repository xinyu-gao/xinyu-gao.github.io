(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{548:function(v,t,_){"use strict";_.r(t);var a=_(2),s=Object(a.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"运行时数据区域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区域"}},[v._v("#")]),v._v(" 运行时数据区域")]),v._v(" "),_("p",[v._v("Java 虚拟机在执行 Java 程序的过程中会把它所管理的内存划分为若干个不同的数据区域。")]),v._v(" "),_("p",[v._v("以下是几个运行时数据区域")]),v._v(" "),_("h3",{attrs:{id:"_1-程序计数器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-程序计数器"}},[v._v("#")]),v._v(" 1. 程序计数器")]),v._v(" "),_("blockquote",[_("p",[v._v("字节码解释器工作时就是通过这个改变这个计数器的值来选择下一条需要执行的字节码指令。")]),v._v(" "),_("p",[v._v("例如：分支、循环、跳转等都依赖于程序计数器完成。")])]),v._v(" "),_("p",[v._v("一块较小的内存空间，线程私有。")]),v._v(" "),_("p",[v._v("程序计数器的值：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("若执行 "),_("strong",[v._v("Java")]),v._v(" 方法，计数器记录的是正在执行的虚拟机字节码指令的地址。")])]),v._v(" "),_("li",[_("p",[v._v("若执行 "),_("strong",[v._v("Native")]),v._v(" 方法，则计数器值为空。")])])]),v._v(" "),_("p",[v._v("关于 "),_("strong",[v._v("线程私有")]),v._v("：")]),v._v(" "),_("blockquote",[_("p",[v._v("一个处理器或一个内核（对于多核处理器）在任何一个确定的时刻，都只会执行一条线程中的指令。")]),v._v(" "),_("p",[v._v("每个线程都具有独立的程序计数器，他们互不影响，独立运行。这就是线程私有。")])]),v._v(" "),_("h3",{attrs:{id:"_2-java-虚拟机栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-虚拟机栈"}},[v._v("#")]),v._v(" 2. Java 虚拟机栈")]),v._v(" "),_("p",[v._v("线程私有，声明周期与线程相同")])])}),[],!1,null,null,null);t.default=s.exports}}]);