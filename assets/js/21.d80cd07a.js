(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{542:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、命名"}},[s._v("#")]),s._v(" 一、命名")]),s._v(" "),a("p",[s._v("命名规则涉及 "),a("em",[a("strong",[s._v("变量、常量、函数、结构、接口、方法、包名")])]),s._v(" 等的命名。")]),s._v(" "),a("p",[a("strong",[s._v("命名规则：")])]),s._v(" "),a("ul",[a("li",[s._v("以一个字母（Unicode）或下划线开头；")]),s._v(" "),a("li",[s._v("可以跟任意数量的字母、数字或下划线；")]),s._v(" "),a("li",[s._v("区分大小写（"),a("code",[s._v("Hello")]),s._v(" 和 "),a("code",[s._v("hello")]),s._v(" 不同）。")]),s._v(" "),a("li",[s._v("不能使用关键字，以及尽量不使用预定义名。")])]),s._v(" "),a("p",[a("strong",[s._v("关键字：")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fallthrough")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("预定义名：")])]),s._v(" "),a("p",[s._v("可以在定义中重新使用它们。")]),s._v(" "),a("p",[s._v("在一些特殊的场景中重新定义它们也是有意义的，但是也要注意避免过度而引起语义混乱。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("内建常量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("iota")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n内建类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int16")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int64")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint8")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint16")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint64")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float32")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex128")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex64")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("byte")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("rune")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v("\n内建函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("make")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("cap")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("new")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("append")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("copy")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("close")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("delete")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("real")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("imag")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("注：")])]),s._v(" "),a("p",[s._v("Go 常使用短小的名字。如果一个名字的作用域比较大，生命周期也比较长，那么用长的名字将会更有意义。")]),s._v(" "),a("p",[a("strong",[s._v("命名规范：")])]),s._v(" "),a("ul",[a("li",[s._v("包名：全小写，简短，无下划线。"),a("code",[s._v("package api")])]),s._v(" "),a("li",[s._v("文件名：下划线命名法。"),a("code",[s._v("user_service.go")])]),s._v(" "),a("li",[s._v("结构体、变量、接口：驼峰命名法。")]),s._v(" "),a("li",[s._v("常量：全大写，下划线分割。")])]),s._v(" "),a("h2",{attrs:{id:"二、声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、声明"}},[s._v("#")]),s._v(" 二、声明")]),s._v(" "),a("h3",{attrs:{id:"_1-声明类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明类型"}},[s._v("#")]),s._v(" 1. 声明类型")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("var")]),s._v("：变量")]),s._v(" "),a("li",[a("code",[s._v("const")]),s._v("：常量")]),s._v(" "),a("li",[a("code",[s._v("type")]),s._v("：类型")]),s._v(" "),a("li",[a("code",[s._v("func")]),s._v("：函数实体对象")])]),s._v(" "),a("h3",{attrs:{id:"_2-声明级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-声明级别"}},[s._v("#")]),s._v(" 2. 声明级别")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("包级别")]),s._v("：可在整个包对应的每个源文件中访问。")]),s._v(" "),a("li",[a("strong",[s._v("函数级别")]),s._v("：只能在函数内部很小的范围被访问。")])]),s._v(" "),a("h2",{attrs:{id:"三、变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、变量"}},[s._v("#")]),s._v(" 三、变量")]),s._v(" "),a("p",[s._v("两种声明变量方式： var 声明；简短声明。")]),s._v(" "),a("h3",{attrs:{id:"_1-var-声明语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-var-声明语句"}},[s._v("#")]),s._v(" 1. var 声明语句")]),s._v(" "),a("p",[s._v("用于需要 "),a("strong",[s._v("显式")]),s._v(" 指定变量类型地方，或者因为变量稍后会被 "),a("strong",[s._v("重新赋值")]),s._v(" 而初始值无关紧要的地方。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" 变量名字 类型 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表达式\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("省略：")]),s._v("（二者只能省略一个）")]),s._v(" "),a("ul",[a("li",[s._v("类型：根据 表达式 来推导。")]),s._v(" "),a("li",[s._v("初始化表达式：零值初始化。")])]),s._v(" "),a("p",[a("strong",[s._v("零值：")])]),s._v(" "),a("ul",[a("li",[s._v("数值类型 -> "),a("code",[s._v("0")])]),s._v(" "),a("li",[s._v("布尔类型 -> "),a("code",[s._v("false")])]),s._v(" "),a("li",[s._v("字符串类型 -> 空字符串 "),a("code",[s._v('""')])]),s._v(" "),a("li",[s._v("接口或引用类型 -> "),a("code",[s._v("nil")])]),s._v(" "),a("li",[s._v("数组或结构体等聚合类型 -> 是每个元素或字段对应该类型的零值")])]),s._v(" "),a("p",[a("strong",[s._v("初始化：")])]),s._v(" "),a("ul",[a("li",[s._v("在 包级别 声明的变量会在 main 入口函数执行前完成初始。")]),s._v(" "),a("li",[s._v("局部变量 将在声明语句被执行到的时候完成初始化。")])]),s._v(" "),a("h3",{attrs:{id:"_2-简短变量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-简短变量声明"}},[s._v("#")]),s._v(" 2. 简短变量声明")]),s._v(" "),a("p",[s._v("用于声明和初始化 "),a("strong",[s._v("局部变量")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("左侧可以是声明过的变量，这时为赋值功能。")]),s._v(" "),a("h2",{attrs:{id:"四、赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、赋值"}},[s._v("#")]),s._v(" 四、赋值")]),s._v(" "),a("p",[s._v("左右两侧的类型必须完全匹配，"),a("code",[s._v("nil")]),s._v(" 可以赋值给任何指针或引用类型的变量。")]),s._v(" "),a("p",[a("strong",[s._v("简单赋值：")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("二元算术运算符")]),s._v(" 和 "),a("strong",[s._v("赋值语句")]),s._v(" 的复合操作：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*=")]),s._v(" scale\ncount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" scale\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("递增递减操作：")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("v "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nv"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\nv"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("元组赋值：")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x\ni"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 丢弃第一个值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"五、类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、类型"}},[s._v("#")]),s._v(" 五、类型")]),s._v(" "),a("h3",{attrs:{id:"_1-类型声明语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-类型声明语句"}},[s._v("#")]),s._v(" 1. 类型声明语句")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" 类型名字 底层类型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Celsius "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 摄氏温度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Fahrenheit "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 华氏温度")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("警告")]),s._v(" "),a("p",[s._v("即使这两个类型的底层类型相同，他们之间也是不兼容的。它们不可以被相互比较或混在\n一个表达式运算。")])]),s._v(" "),a("h3",{attrs:{id:"_2-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-类型转换"}},[s._v("#")]),s._v(" 2. 类型转换")]),s._v(" "),a("blockquote",[a("p",[s._v("对于每一个类型 T，都有一个对应的类型转换操作 T(x)，用于将 x 转为 T 类型（译注：如果 T 是\n指针类型，可能会需要用小括弧包装 T，比如 (*int)(0) ）")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("float64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);