(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{508:function(a,t,s){a.exports=s.p+"assets/img/image-20210817144102986.88158434.png"},550:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"接口、实现分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接口、实现分离"}},[a._v("#")]),a._v(" 接口、实现分离")]),a._v(" "),e("p",[a._v("Java 集合类库将接口（ interface) 与 实现 (implementation) 分离。")]),a._v(" "),e("p",[a._v("**好处：**当在程序中一旦构建了集合就不需要知道究竟使用了哪种实现。")]),a._v(" "),e("p",[a._v("例如，使用接口类型存放集合的引用：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Queue")]),a._v(" expresslane "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CircularArrayQueue")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \nexpressLane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Customer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Harry"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("一旦改变了想法，只需要修改调用构造器的地方的代码即可。")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Queue")]),a._v(" expressLane "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LinkedListQueueo")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \nexpressLane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Custonier")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("'"),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Harry")]),a._v('"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("hr"),a._v(" "),e("h3",{attrs:{id:"collection-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection-接口"}},[a._v("#")]),a._v(" Collection 接口")]),a._v(" "),e("p",[a._v("在 Java 类库中，集合类的基本接口是 Collection 接口。")]),a._v(" "),e("p",[a._v("重点讲一下迭代器方法：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collection")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//...")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Iterator")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("E")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("iterator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[e("code",[a._v("iterator")]),a._v(" 方法用于返回一个实现了 "),e("code",[a._v("Iterator")]),a._v(" 接口的对象。")]),a._v(" "),e("p",[a._v("**作用：**可以使用这个迭代器对象 "),e("strong",[a._v("依次访问")]),a._v(" 集合中的元素。")]),a._v(" "),e("p",[e("code",[a._v("Iterator")]),a._v(" 接口包含 4 个方法：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Iterator")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("E")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("hasNext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 删除上次访问的对象")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("forEachRemaining")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Consumer")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("E")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("有 3 种使用方法：")]),a._v(" "),e("p",[a._v("1）构造迭代器对象，普通循环：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collection")]),a._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Iterator")]),a._v(" iter "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("iterator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("iter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("hasNext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果到达了集合的末尾，next 方法将抛出一个 NoSuchElementException。")]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" element "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" iter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("next0； \n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something with element")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("2）使用 "),e("code",[a._v("for each")]),a._v(" 循环，编译器会简单地将其翻译为带有迭代器的循环：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collection")]),a._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" element "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//do something with element ")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("因为 "),e("code",[a._v("Collection")]),a._v(" 接口扩展了 "),e("code",[a._v("Iterable")]),a._v(" 接口。对于标准类库中的任何集合都可以使用 "),e("code",[a._v("for each")]),a._v("” 循环。")]),a._v(" "),e("p",[a._v("3）在 Java SE 8 中，可以调用 "),e("code",[a._v("forEachRemaining")]),a._v(" 方法并提供一个 lambda 表达式（它会处理一个元素）。")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("iterator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("forEachRemaining")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("element "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" something "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("with")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("element")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("这行代码将对迭代器的每一个元素调用这个 lambda 表达式，直到再没有元素为止。")]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"collection-接口常见的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection-接口常见的方法"}},[a._v("#")]),a._v(" Collection 接口常见的方法")]),a._v(" "),e("p",[a._v("Collection 接口声明了很多有用的方法，所有的实现类都必须提供这些方法。下面列举一些常见的：")]),a._v(" "),e("h4",{attrs:{id:"iterator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iterator"}},[a._v("#")]),a._v(" iterator")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("Iterator < E> iterator()")]),a._v("。")]),a._v(" "),e("p",[a._v("功能：返回一个用于访问集合中每个元素的迭代器。")]),a._v(" "),e("h4",{attrs:{id:"size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[a._v("#")]),a._v(" size")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("int size()")]),a._v("。")]),a._v(" "),e("p",[a._v("功能：返回当前存储在集合中的元素个数。")]),a._v(" "),e("h4",{attrs:{id:"isempty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isempty"}},[a._v("#")]),a._v(" isEmpty")]),a._v(" "),e("p",[a._v("格式："),e("code",[a._v("boolean isEmpty()")])]),a._v(" "),e("p",[a._v("功能：如果集合中没有元素， 返回 true。")]),a._v(" "),e("h4",{attrs:{id:"contains"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contains"}},[a._v("#")]),a._v(" contains")]),a._v(" "),e("p",[a._v("格式：• "),e("code",[a._v("boolean contains(Object obj)")])]),a._v(" "),e("p",[a._v("功能：如果集合中包含了一个与 obj 相等的对象， 返回 true。")]),a._v(" "),e("h4",{attrs:{id:"containsall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#containsall"}},[a._v("#")]),a._v(" containsAll")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("boolean containsAll(Collection<?> other)")])]),a._v(" "),e("p",[a._v("功能：如果这个集合包含 other 集合中的所有元素， 返回 true。")]),a._v(" "),e("h4",{attrs:{id:"add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[a._v("#")]),a._v(" add")]),a._v(" "),e("p",[e("code",[a._v("格式：boolean add(Object element)")])]),a._v(" "),e("p",[a._v("功能：将一个元素添加到集合中。如果由于这个调用改变了集合，返回 true。")]),a._v(" "),e("h4",{attrs:{id:"addall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addall"}},[a._v("#")]),a._v(" addAll")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("boolean addAll(Collection<? extends E> other)")]),a._v("\n功能：将 other 集合中的所有元素添加到这个集合。如果由于这个调用改变了集合，返回 true。")]),a._v(" "),e("h4",{attrs:{id:"remove"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remove"}},[a._v("#")]),a._v(" remove")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("boolean remove(Object obj)")]),a._v("。\n功能：从这个集合中删除等于 obj 的对象。如果有匹配的对象被删除， 返回 true。")]),a._v(" "),e("h4",{attrs:{id:"removeall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removeall"}},[a._v("#")]),a._v(" removeAll")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("boolean removeAll(Collection<?> other)")]),a._v("\n功能：从这个集合中删除 other 集合中存在的所有元素。如果由于这个调用改变了集合，返回 true。")]),a._v(" "),e("h4",{attrs:{id:"removelf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removelf"}},[a._v("#")]),a._v(" removelf")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("default boolean removelf(Predicate<? super E> filter)")])]),a._v(" "),e("p",[a._v("功能：从这个集合删除 filter 返回 true 的所有元素。如果由于这个调用改变了集合， 则返回 true。")]),a._v(" "),e("h4",{attrs:{id:"clear"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[a._v("#")]),a._v(" clear")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("void clear()")])]),a._v(" "),e("p",[a._v("功能：从这个集合中删除所有的元素。")]),a._v(" "),e("h4",{attrs:{id:"retainall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retainall"}},[a._v("#")]),a._v(" retainAll")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("boolean retainAll(Collection<?> other)")])]),a._v(" "),e("p",[a._v("功能：从这个集合中删除所有与 other 集合中的元素不同的元素。如果由于这个调用改变了\n集合， 返回 true。")]),a._v(" "),e("h4",{attrs:{id:"toarray"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toarray"}},[a._v("#")]),a._v(" toArray")]),a._v(" "),e("p",[a._v("格式："),e("code",[a._v("Object[] toArray()")])]),a._v(" "),e("p",[a._v("功能：返回这个集合的对象数组。")]),a._v(" "),e("p",[a._v("格式： "),e("code",[a._v("<T> T[] toArray(T[] arrayToFi11)")])]),a._v(" "),e("p",[a._v("功能：返回这个集合的对象数组。如果 arrayToFill 足够大， 就将集合中的元素填入这个数组\n中。剩余空间填补 null ; 否则， 分配一个新数组， 其成员类型与 arrayToFill 的成员类\n型相同， 其长度等于集合的大小， 并填充集合元素。")]),a._v(" "),e("hr"),a._v(" "),e("h3",{attrs:{id:"具体集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体集合"}},[a._v("#")]),a._v(" 具体集合")]),a._v(" "),e("p",[a._v("Java 库中具有以下的具体集合：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(508),alt:"image-20210817144102986"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);