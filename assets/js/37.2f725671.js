(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{566:function(s,a,n){"use strict";n.r(a);var e=n(2),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"容器之间互相访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器之间互相访问"}},[s._v("#")]),s._v(" 容器之间互相访问")]),s._v(" "),n("p",[s._v("由于 Docker 容器之间互相隔离，是不可以直接进行访问的（通过 localhost 访问）。需要通过以下几种方式来进行访问。")]),s._v(" "),n("h3",{attrs:{id:"_1-公网访问"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-公网访问"}},[s._v("#")]),s._v(" 1. 公网访问")]),s._v(" "),n("p",[s._v("如果你的宿主机的 IP 为公网 IP，则可以直接通过该 IP 访问。")]),s._v(" "),n("h3",{attrs:{id:"_2-自定义网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义网络"}},[s._v("#")]),s._v(" 2. 自定义网络")]),s._v(" "),n("p",[s._v("首先创建一个新的虚拟网络，可以用它来管理容器通信。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ docker network create my_network\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# my_network 为虚拟网络名")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("假设有一个 MySQL 容器（名为 mysql），一个后端服务容器（名为 spring）。")]),s._v(" "),n("p",[s._v("我们可以把两个容器链接到上面的虚拟网络中。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ docker network connect my_network mysql\n$ docker network connect my_network spring\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("然后 spring 容器中寻找 mysql，将 IP 地址修改为容器名 mysql：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 spring 容器后执行")]),s._v("\n$ docker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it spring "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" mysql\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目配置文件中 mysql 连接地址修改为")]),s._v("\njdbc:mysql://mysql:3306/***?\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("或者在容器启动时显式指定其网络（使用 "),n("code",[s._v("--network")]),s._v(" 指定网络名)：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ docker run --network my_network ****\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_3-链接容器法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-链接容器法"}},[s._v("#")]),s._v(" 3. 链接容器法")]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),n("p",[s._v("该方法不再推荐，不过过去很长时间它都是经常使用的，也要了解会使用。")])]),s._v(" "),n("p",[s._v("首先第一个容器需要命名（这里命名为 spring-mysql）：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ docker run --name spring-mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n*** "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 省略部分参数")]),s._v("\n-d mysql:8.0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("然后在需要访问 mysql 的容器启动参数上添加（"),n("code",[s._v("--link")]),s._v("）：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ docker run --name spring "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--link spring-mysql:mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-d spring\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("这样在 spring 容器中对 mysql 服务的引用将发送到名为 spring-mysql 的容器中。")]),s._v(" "),n("p",[s._v("同样将配置文件修改 IP 地址为 mysql:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("jdbc:mysql://mysql:3306/***?\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);