(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{547:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"反射简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射简介"}},[s._v("#")]),s._v(" 反射简介")]),s._v(" "),a("h3",{attrs:{id:"_1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[s._v("#")]),s._v(" 1. 定义")]),s._v(" "),a("p",[s._v("反射就是 "),a("strong",[s._v("Reflection")]),s._v("，反射是 "),a("strong",[s._v("Java")]),s._v(" 语言的一种特性，它可以让 Java 程序在运行过程中检查、操作程序的内部属性。例如，它可以让一个 "),a("strong",[s._v("Java")]),s._v(" 类获取并显示其所有的成员变量名称。")]),s._v(" "),a("h3",{attrs:{id:"_2-目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-目的"}},[s._v("#")]),s._v(" 2. 目的")]),s._v(" "),a("p",[s._v("官方文档对反射目的的描述：")]),s._v(" "),a("ul",[a("li",[s._v("让开发人员可以通过外部类的全路径名创建对象，并使用这些类，实现一些扩展的功能。")]),s._v(" "),a("li",[s._v("让开发人员可以枚举出类的全部成员，包括构造函数、属性、方法。以帮助开发者写出正确的代码。")]),s._v(" "),a("li",[s._v("测试时可以利用 "),a("strong",[s._v("反射 API")]),s._v(" 访问类的私有成员，以保证测试代码覆盖率。")])]),s._v(" "),a("p",[s._v("可以在不修改代码的情况下，利用外部文件进行对象和方法的更改，有效降低代码耦合性。")]),s._v(" "),a("h4",{attrs:{id:"_3-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用"}},[s._v("#")]),s._v(" 3. 应用")]),s._v(" "),a("p",[s._v("反射似乎破坏了 "),a("strong",[s._v("封装性")]),s._v("，甚至让私有变量都可以让外部访问，失去了一定的安全性。")]),s._v(" "),a("p",[s._v("使用反射，首先代码非常繁琐，其次，它更多地是给工具或者底层框架来使用，目的是在不知道目标实例任何信息的情况下，获取特定字段的值。")]),s._v(" "),a("p",[a("strong",[s._v("Java Beans")]),s._v(" 就是一个使用反射机制的例子。")]),s._v(" "),a("h2",{attrs:{id:"反射-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射-api"}},[s._v("#")]),s._v(" 反射 API")]),s._v(" "),a("p",[a("strong",[s._v("Class 类")]),s._v("：表示正在运行的 Java 应用程序中的类的 "),a("strong",[s._v("实例")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("Field 类")]),s._v("：提供有关类的 "),a("strong",[s._v("属性信息")]),s._v("，以及对它的动态访问权限。它是一个封装反射类的属性的类。")]),s._v(" "),a("p",[a("strong",[s._v("Method 类")]),s._v("：提供关于类的 "),a("strong",[s._v("方法")]),s._v(" 的信息，包括抽象方法。它是用来封装反射类方法的一个类。")]),s._v(" "),a("p",[a("strong",[s._v("Constructor 类")]),s._v("：提供有关类的 "),a("strong",[s._v("构造方法")]),s._v(" 的信息，以及对它的动态访问权限。它是一个封装反射类的构造方法的类。")]),s._v(" "),a("p",[a("strong",[s._v("Object 类")]),s._v("：Object 是所有 Java 类的 "),a("strong",[s._v("父类")]),s._v("。所有对象都默认实现了 Object 类的方法。")]),s._v(" "),a("h2",{attrs:{id:"获取-class-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-class-类"}},[s._v("#")]),s._v(" 获取 Class 类")]),s._v(" "),a("h3",{attrs:{id:"_1-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[s._v("#")]),s._v(" 1. 原理")]),s._v(" "),a("p",[s._v("JVM 加载每个 class 的时候创建了对应的 "),a("strong",[s._v("Class 实例")]),s._v("，并在该实例中保存了该 class 的所有信息。\n我们可以通过 Class 实例来获取对应的 class 的所有信息，即 "),a("strong",[s._v("反射")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_2-获取-class-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取-class-实例"}},[s._v("#")]),s._v(" 2. 获取 Class 实例")]),s._v(" "),a("p",[s._v("获取 "),a("strong",[s._v("Class 实例")]),s._v(" 有 "),a("strong",[s._v("3")]),s._v(" 种方法：")]),s._v(" "),a("ol",[a("li",[s._v("需要 "),a("strong",[s._v("导入类包")]),s._v("，直接通过 "),a("strong",[s._v("class")]),s._v(" 的静态变量 "),a("code",[s._v("class")]),s._v(" 获取：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" studentClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("需要 "),a("strong",[s._v("完整类名")]),s._v("，通过静态方法 "),a("code",[s._v("Class.forName()")]),s._v("（"),a("strong",[s._v("常用")]),s._v("）：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" studentClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.***.Student"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("需要 "),a("strong",[s._v("实例对象")]),s._v("，通过方法 "),a("code",[s._v("getClass()")]),s._v("：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" student "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" studentClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-jvm-动态加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-jvm-动态加载"}},[s._v("#")]),s._v(" 3. JVM 动态加载")]),s._v(" "),a("p",[s._v("在执行程序时，只有在用到 "),a("strong",[s._v("class")]),s._v(" 的时候才加载到内存中。")]),s._v(" "),a("p",[s._v("例子：优先使用某类 "),a("strong",[s._v("A")]),s._v("，当 "),a("strong",[s._v("A")]),s._v(" 不存在时，使用类 "),a("strong",[s._v("B")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_4-模拟实例化操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-模拟实例化操作"}},[s._v("#")]),s._v(" 4. 模拟实例化操作")]),s._v(" "),a("p",[a("code",[s._v("Class.isInstance()")]),s._v(" 方法")]),s._v(" "),a("h2",{attrs:{id:"获取成员变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取成员变量"}},[s._v("#")]),s._v(" 获取成员变量")]),s._v(" "),a("h3",{attrs:{id:"_1-获取-field-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-field-实例"}},[s._v("#")]),s._v(" 1. 获取 Field 实例")]),s._v(" "),a("p",[s._v("Java 提供了 4 种方法：")]),s._v(" "),a("ol",[a("li",[a("p",[a("code",[s._v("getDeclaredFields()")]),s._v(" ：获取所有类（"),a("strong",[s._v("不包括父类")]),s._v("）的 "),a("strong",[s._v("public、protect、private")]),s._v(" 字段。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("getDeclaredField(String name)")]),s._v(" ：根据字段名获取类（"),a("strong",[s._v("不包括父类")]),s._v("）的 "),a("strong",[s._v("public、protect、private")]),s._v(" 字段。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("getFields()")]),s._v("：仅获取 "),a("strong",[s._v("类及其父类所有的 public 字段")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("getField(String name)")]),s._v("：根据字段名仅获取 "),a("strong",[s._v("类及其父类的 public 字段")]),s._v("。")])])]),s._v(" "),a("p",[a("strong",[s._v("演示代码：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// People.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("People")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Student.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("People")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NoSuchFieldException")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" studentClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出： public int Student.weight; protected int Student.id; private int Student.password;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" studentClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredFields")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出：public int Student.weight;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("studentClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"weight"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出：public int Student.weight; public int People.age;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" studentClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFields")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h3",{attrs:{id:"_2-获取-field-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取-field-信息"}},[s._v("#")]),s._v(" 2. 获取 Field 信息")]),s._v(" "),a("p",[s._v("一个 Field 对象包含了一个字段的所有信息：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("getName()")]),s._v("：返回字段名称，例如，"),a("code",[s._v('"name"')]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("getType()")]),s._v("：返回字段类型，也是一个 Class 实例，例如，"),a("code",[s._v("String.class")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("getModifiers()")]),s._v("：返回字段的修饰符，它是一个 int，不同的 bit 表示不同的含义。")])]),s._v(" "),a("h3",{attrs:{id:"_3-访问、设置-field-值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-访问、设置-field-值"}},[s._v("#")]),s._v(" 3. 访问、设置 Field 值")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Field.setAccessible(true)")]),s._v(" ：通过此设置可以访问所有（包括 "),a("strong",[s._v("非 public")]),s._v("） 的字段。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Field.get(Object)")]),s._v("："),a("strong",[s._v("获取指定实例的指定字段的值")]),s._v("，参数为指定的实例。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Field.set(Object, Object)")]),s._v("："),a("strong",[s._v("设置字段值")]),s._v("，其中第一个 Object 参数是指定的实例，第二个 Object 参数是待修改的值。")])])]),s._v(" "),a("h2",{attrs:{id:"调用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用方法"}},[s._v("#")]),s._v(" 调用方法")]),s._v(" "),a("h3",{attrs:{id:"_1-获取-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-method"}},[s._v("#")]),s._v(" 1. 获取 Method")]),s._v(" "),a("p",[s._v("Java 提供了 4 种方法：")]),s._v(" "),a("ol",[a("li",[a("p",[a("code",[s._v("Method[] getDeclaredMethods()")]),s._v(" ：获取所有类（"),a("strong",[s._v("不包括父类")]),s._v("）的 "),a("strong",[s._v("public、protect、private")]),s._v(" 方法。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Method getDeclaredField(String name, Class)")]),s._v(" ：根据 "),a("strong",[s._v("方法名、参数")]),s._v(" 获取类（"),a("strong",[s._v("不包括父类")]),s._v("）的 "),a("strong",[s._v("public、protect、private")]),s._v(" 方法。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Method[] getMethods()")]),s._v("：仅获取 "),a("strong",[s._v("类及其父类所有的 public 方法")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Method getMethod(String name, Class)")]),s._v("：根据方法名、参数仅获取 "),a("strong",[s._v("类及其父类的 public 方法")]),s._v("。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-获取-method-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取-method-信息"}},[s._v("#")]),s._v(" 2. 获取 Method 信息")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("getName()")]),s._v("：返回方法名称，例如："),a("code",[s._v('"getScore"')]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("getReturnType()")]),s._v("：返回方法返回值类型，也是一个 Class 实例，例如："),a("code",[s._v("String.class")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("getParameterTypes()")]),s._v("：返回方法的参数类型，是一个 Class 数组，例如："),a("code",[s._v("{String.class, int.class}")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("getModifiers()")]),s._v("：返回方法的修饰符，它是一个 int，不同的 bit 表示不同的含义。")])]),s._v(" "),a("h3",{attrs:{id:"_3-调用-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-调用-method"}},[s._v("#")]),s._v(" 3. 调用 Method")]),s._v(" "),a("p",[a("strong",[s._v("普通方法")]),s._v("： 使用 "),a("code",[s._v("Method.invoke()")]),s._v(" 调用 Method，第 1 个参数是对象实例（即在哪个实例上调用该方法）；后面的可变参数要与方法参数一致，否则将报错。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 String substring(int) 方法，参数为 int")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"substring"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 str 对象上调用该方法并获取结果:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("静态方法")]),s._v("： "),a("code",[s._v("Method.invoke()")]),s._v(" 的第 1 个参数为 null。")]),s._v(" "),a("p",[a("strong",[s._v("非 Public 方法")]),s._v("："),a("code",[s._v("Method.setAccessible(true)")]),s._v("允许其调用，再使用 "),a("code",[s._v("Method.invoke()")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("多态")]),s._v("：如果存在重写，则调用重写的方法。")]),s._v(" "),a("h2",{attrs:{id:"调用构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用构造方法"}},[s._v("#")]),s._v(" 调用构造方法")]),s._v(" "),a("h3",{attrs:{id:"_1-方法-1-public、无参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-方法-1-public、无参数"}},[s._v("#")]),s._v(" 1. 方法 1（public、无参数）")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("Class.newInstance()")]),s._v("，但只能调用该类的 "),a("strong",[s._v("public")]),s._v(" 、且 "),a("strong",[s._v("无参数")]),s._v(" 构造方法。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-方法-2-任意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-方法-2-任意"}},[s._v("#")]),s._v(" 2. 方法 2（任意）")]),s._v(" "),a("p",[s._v("为了调用任意的构造方法，可以通过 "),a("strong",[s._v("Class 实例")]),s._v(" 获取 Constructor 的方法：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("getConstructor(Class...)")]),s._v("：获取某个 public 的 Constructor。")]),s._v(" "),a("li",[a("code",[s._v("getDeclaredConstructor(Class...)")]),s._v("：获取某个 Constructor。")]),s._v(" "),a("li",[a("code",[s._v("getConstructors()")]),s._v("：获取所有 public 的 Constructor。")]),s._v(" "),a("li",[a("code",[s._v("getDeclaredConstructors()")]),s._v("：获取所有 Constructor。")])]),s._v(" "),a("h2",{attrs:{id:"继承关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承关系"}},[s._v("#")]),s._v(" 继承关系")]),s._v(" "),a("h3",{attrs:{id:"_1-获取父类类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取父类类型"}},[s._v("#")]),s._v(" 1. 获取父类类型")]),s._v(" "),a("p",[a("code",[s._v("getSuperclass()")]),s._v("：获取当前类的父类的类型。除 Object 外，其他任何非 interface 的 Class 都必定存在一个父类类型。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSuperclass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-获取-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取-interface"}},[s._v("#")]),s._v(" 2. 获取 interface")]),s._v(" "),a("p",[a("code",[s._v("getInterfaces()")]),s._v("：获取当前类（不包括父类）的所有实现的接口：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3-判断子类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-判断子类"}},[s._v("#")]),s._v(" 3. 判断子类")]),s._v(" "),a("p",[a("code",[s._v("isAssignableFrom()")]),s._v("：方法可以判断一个类是否为其子类。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isAssignableFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);